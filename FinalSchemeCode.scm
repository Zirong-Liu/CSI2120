; <-----------------------------------------------------------  GIVEN CODE  ----------------------------------------------------------------------------------------------------------------------------->

(define items '(200 300 1200 100 550 300))
(define S1 '(2650 2350 2100 2550 1450 2350 2450 1800 2250 2000 1150 900 1350 2050 1800 2250 1150 2150 1900 2350 1250 2150 1700 600 1050 800 1500 1950 1700 850 600 1050 1600 2050 1800 950 700 1150 1850 1600 2050 950 500 1400 300 750 500 1500 400 850 600 1300 1750 1500 650 400 850 200 300 1200 100 550 300 0))



; <-------------------------------------------------------------- PART A -------------------------------------------------------------------------------------------------------------------------->
(define (difference A B)
(abs (- (* 2 B) A)))



; <-------------------------------------------------------------- PART B -------------------------------------------------------------------------------------------------------------------------->
(define (differenceAll D Lis)
(cond
((null? Lis) '())
(else (cons (difference D (car Lis)) (differenceAll D (cdr Lis))))))



; <-------------------------------------------------------------- PART C -------------------------------------------------------------------------------------------------------------------------->
; Helper for part C
(define (getSum Lis)
(cond
((null? Lis) 0)
(else (+ (car Lis) (getSum (cdr Lis))))))


(define (sumLists Lis)
(cond
((null? Lis) '())
(else (cons (getSum (car Lis)) (sumLists (cdr Lis))))))



; <-------------------------------------------------------------- PART D -------------------------------------------------------------------------------------------------------------------------->
; Helper for part D
(define (get_minimum Lis A)
(cond
((null? Lis) A)
((< (car Lis) A) (get_minimum (cdr Lis) (car Lis)))
(else (get_minimum (cdr Lis) A))))

(define (solve2knapsack B A)
(get_minimum (differenceAll (getSum B) A) 999999999))

